#
[build-system]
requires      = ["setuptools", "setuptools_scm"]
build-backend = "setuptools.build_meta"


[project]
name = "nnll"
description = "Neural Network Link Library : A comprehensive modular toolkit for Diffusion and Large Language Model inference processes."
authors = [
    { name = "darkshapes", email = "91800957+exdysa@users.noreply.github.com" },
]

requires-python = ">= 3.10"
license = { file = "LICENSE" }
readme = "README.md"
urls = { source = "https://github.com/darkshapes/nnll" }
dynamic = ["version"]
keywords = [
    "ML",
    "AI",
    "neural network",
    "library",
    "diffusion",
    "LLM",
    "torch",
]

[project.optional-dependencies]
01 = []
02 = ["nnll[01]", "rich"]
03 = ["nnll[27]", "tqdm", "aioresponses", "anyio", "aiofiles", "aiohttp"]
04 = []
05 = ["llama-cpp-python", "gguf", "wheel"]
07 = []
08 = ["numpy", "torch"]
09 = ["transformers", "torch", "sentencepiece"]
10 = [
    "textual",
    "textual-plotext",
    "huggingface_hub",
    "ollama",
    'sounddevice',
    "rich",
    "litellm",
]
11 = ["dspy", "pydantic"]
14 = ["networkx", "nnll[15]"]
15 = ["pydantic"]
16 = ["torch"]
18 = ["torch"]
22 = []
24 = ["nnll[33]"]
25 = []
26 = ["torch"]
27 = []
28 = []
29 = ["nnll[24]"]
30 = []
31 = ["nnll[30]"]
32 = ["nnll[04]", "nnll[05]", "nnll[28]"]
33 = ["nnll[25]", "nnll[44]"]
34 = []
35 = []
36 = ["nnll[30]", "nnll[32]"]
37 = []
39 = ["nnll[30]", "nnll[46]", "nnll[47]"]
40 = ["nnll[07]", "nnll[27]", "nnll[39]"]
41 = []
44 = ["huggingface_hub"]
45 = ["huggingface_hub"]
46 = ["nnll[24]"]
47 = ["pydantic", "pydantic-core", "nnll[01]"]
48 = ["pillow", "toml", "nnll[02]", "nnll[47]", "nnll[54]"]
49 = ["nnll[47]", "nnll[48]", "nnll[02]", "pydantic"]
51 = []
53 = []
54 = ["nnll[02]", "nnll[04]", "nnll[05]", "nnll[28]"]
56 = ["torch", "hidiffusion"]
57 = ["pillow"]
59 = ["nnll[60]"]
60 = []
61 = []
62 = ["nnll[60]"]
63 = ["torch", "diffusers", "hidiffusion", "sentencepiece"]
64 = ["nnll[59]", "nnll[61]", "nnll[62]", "nnll[63]", "nnll[08]", "pillow"]
opt = ["ollama", "huggingface_hub", "outetts", "llvmlite", "numba", "librosa"]
main = [
    "nnll[01]",
    "nnll[02]",
    "nnll[03]",
    "nnll[04]",
    "nnll[05]",
    "nnll[07]",
    "nnll[08]",
    "nnll[09]",
    "nnll[10]",
    "nnll[11]",
    "nnll[12]",
    "nnll[13]",
    "nnll[14]",
    "nnll[15]",
    "nnll[16]",
    "nnll[18]",
    "nnll[22]",
    "nnll[24]",
    "nnll[25]",
    "nnll[26]",
    "nnll[27]",
    "nnll[28]",
    "nnll[29]",
    "nnll[30]",
    "nnll[31]",
    "nnll[32]",
    "nnll[33]",
    "nnll[34]",
    "nnll[35]",
    "nnll[36]",
    "nnll[37]",
    "nnll[39]",
    "nnll[40]",
    "nnll[41]",
    "nnll[44]",
    "nnll[45]",
    "nnll[46]",
    "nnll[47]",
    "nnll[48]",
    "nnll[49]",
    "nnll[51]",
    "nnll[53]",
    "nnll[54]",
    "nnll[56]",
    "nnll[57]",
    "nnll[59]",
    "nnll[60]",
    "nnll[61]",
    "nnll[62]",
    "nnll[63]",
    "nnll[64]",
]
dev = [
    "nnll[main]",
    "nnll[opt]",
    "pytest",
    "ruff",
    "pytest-asyncio",
    "pytest-asyncio",
    "pytest-tornasync",
    "pytest-trio",
    "textual-dev",
]

[project.scripts]
nnll-find  = "nnll_31:find_entry"
nnll-parse = "nnll_36:main"

[tool.setuptools]
packages = [
    "nnll_01",
    "nnll_02",
    "nnll_03",
    "nnll_04",
    "nnll_05",
    "nnll_07",
    "nnll_08",
    "nnll_09",
    "nnll_18",
    "nnll_22",
    "nnll_24",
    "nnll_25",
    "nnll_26",
    "nnll_27",
    "nnll_28",
    "nnll_29",
    "nnll_30",
    "nnll_31",
    "nnll_32",
    "nnll_33",
    "nnll_34",
    "nnll_35",
    "nnll_36",
    "nnll_37",
    "nnll_39",
    "nnll_40",
    "nnll_41",
    "nnll_44",
    "nnll_45",
    "nnll_46",
    "nnll_47",
    "nnll_48",
    "nnll_49",
    "nnll_51",
    "nnll_53",
    "nnll_54",
    "nnll_56",
    "nnll_57",
    "nnll_59",
    "nnll_60",
    "nnll_61",
    "nnll_62",
    "nnll_63",
    "nnll_64",
]

[tool.setuptools_scm]

write_to = "_version.py"

[tool.uv]
dev-dependencies = ["nnll[dev]"]

[tool.ruff]
line-length    = 140
include        = ["*.py"]
extend-exclude = ["^tests/.*$", "test.*$"]

[tool.pylint]
max-line-length = 140
ignore-paths    = ["^tests/.*$", "test_.*$"]

[tool.ruff.format]

[tool.ruff.lint.pycodestyle]
max-line-length               = 140
ignore-overlong-task-comments = true

[tool.typos]
files.extend-exclude = ["^tests/.*$", "test.*$"]
