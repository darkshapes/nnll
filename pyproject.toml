#
[build-system]
requires      = ["setuptools", "setuptools_scm"]
build-backend = "setuptools.build_meta"


[project]
authors = [
    { name = "darkshapes", email = "91800957+exdysa@users.noreply.github.com" },
]
description = "Neural Network Link Library : A comprehensive modular toolkit for Diffusion and Large Language Model inference processes."
dynamic = ["version"]
name = "nnll"
readme = "README.md"
requires-python = ">= 3.11"
keywords = [
    "ML",
    "AI",
    "neural network",
    "library",
    "diffusion",
    "LLM",
    "torch",
]
classifiers = [
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
]

dependencies = [
    "accelerate>=1.7.0",
    "aiofiles>=24.1.0",
    "aiohttp>=3.12.6",
    "bitsandbytes>=0.46.0 ; sys_platform == 'linux' or sys_platform == 'windows'",
    "diffusers  @ git+https://github.com/huggingface/diffusers",
    "gguf>=0.10.0",
    "hidiffusion>=0.1.10",
    "huggingface-hub[cli,hf-transfer,hf-xet]>=0.32.3",
    "llama-cpp-python>=0.3.9",
    "peft>=0.15.2",
    "pillow>=11.2.1",
    "protobuf>=5.29.5",
    "psutil>=7.0.0",
    "pydantic-core>=2.33.2",
    "pydantic>=2.11.5",
    "rich>=14.0.0",
    "sentencepiece ; python_version < '3.13' ",
    "sentencepiece @ git+https://github.com/google/sentencepiece.git#subdirectory=python ; python_version >= '3.13' ",
    "structlog>=25.4.0",
    "tqdm>=4.67.1",
    "transformers  @ git+https://github.com/huggingface/transformers",
]


[dependency-groups]
dev = [
    "aioresponses>=0.7.8",
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "pytest-tornasync>=0.6.0.post2",
    "pytest-trio>=0.8.0",
    "ruff>=0.11.12",
    "nnll[mps]; sys_platform == 'darwin'",
    "nnll[cu128,rocm,cpu]; sys_platform != 'darwin' and python_version >= '3.12' ",
    "nnll[cu126,rocm,cpu]; sys_platform != 'darwin' and python_version < '3.12'",
    "pytest-mock>=3.14.1",
]

cpu = ["torch", "torchvision", "torchaudio"]

mps = [
    "torch",
    "torchvision",
    "torchaudio",
    "numpy<=2.3",
    "mflux>=0.2.1 ; sys_platform == 'darwin' and platform_machine=='arm64'",
    "mlx-lm<=0.24.1 ; sys_platform == 'darwin' and platform_machine=='arm64'",
    "misaki>=0.8.2 ; python_version < '3.13'",
]

cu126 = [
    "torch",
    "torchvision",
    "torchaudio",
    "triton ; sys_platform == 'Linux'",
    "triton-windows ; sys_platform == 'win32'",
]

cu128 = [
    "torch",
    "torchvision",
    "torchaudio",
    "triton ; sys_platform == 'Linux'",
    "triton-windows ; sys_platform == 'win32'",
    "flash_attn ; sys_platform == 'Linux'",
    "sageattention; sys_platform != 'darwin'",
]

rocm = [
    "torch",
    "torchvision",
    "torchaudio",
    "pytorch-triton-rocm",
    "sageattention; sys_platform != 'darwin'",
    "flash_attn ; sys_platform == 'Linux'",
]
[project.optional-dependencies]

cpu = ["torch", "torchvision", "torchaudio"]

mps = [
    "torch",
    "torchvision",
    "torchaudio",
    "numpy<=2.3",
    "mflux>=0.2.1 ; sys_platform == 'darwin' and platform_machine=='arm64'",
    "mlx-lm<=0.24.1 ; sys_platform == 'darwin' and platform_machine=='arm64'",
    "misaki>=0.8.2 ; python_version < '3.13'",
]

cu126 = [
    "torch",
    "torchvision",
    "torchaudio",
    "triton ; sys_platform == 'Linux'",
    "triton-windows ; sys_platform == 'win32'",
]

cu128 = [
    "torch",
    "torchvision",
    "torchaudio",
    "triton ; sys_platform == 'Linux'",
    "triton-windows ; sys_platform == 'win32'",
    "flash_attn ; sys_platform == 'Linux'",
    "sageattention; sys_platform != 'darwin'",
]

rocm = [
    "torch",
    "torchvision",
    "torchaudio",
    "pytorch-triton-rocm",
    "sageattention; sys_platform != 'darwin'",
    "flash_attn ; sys_platform == 'Linux'",
]
dev = [
    "aioresponses>=0.7.8",
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "pytest-tornasync>=0.6.0.post2",
    "pytest-trio>=0.8.0",
    "ruff>=0.11.12",
    "nnll[mps]; sys_platform == 'darwin'",
    "nnll[cu128,rocm,cpu]; sys_platform != 'darwin' and python_version >= '3.12' ",
    "nnll[cu126,rocm,cpu]; sys_platform != 'darwin' and python_version < '3.12'",
    "pytest-mock>=3.14.1",
]


[project.urls]
Homepage      = "https://github.com/darkshapes/nnll"
Documentation = "https://github.com/darkshapes/sdbx/wiki"

[project.scripts]
nnll-autocard = "nnll.metadata.autocard:main"
nnll-inspect  = "nnll.metadata.model_tags:main"

[tool.setuptools_scm]
write_to = "_version.py"

[tool.setuptools.packages.find]
where   = ["."]
include = ["nnll*"]
exclude = ["tests*"]

[tool.uv]
preview = true
prerelease = "allow"
conflicts = [
    [
        { extra = "cpu" },
        { extra = "mps" },
        { extra = "cu126" },
        { extra = "cu128" },
        { extra = "rocm" },
        { extra = "attention" },

    ],
]
dev-dependencies = [
    "aioresponses>=0.7.8",
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "pytest-tornasync>=0.6.0.post2",
    "pytest-trio>=0.8.0",
    "ruff>=0.11.12",
    "nnll[mps]; sys_platform == 'darwin'",
    "nnll[cu128,rocm,cpu]; sys_platform != 'darwin' and python_version >= '3.12' ",
    "nnll[cu126,rocm,cpu]; sys_platform != 'darwin' and python_version < '3.12'",
    "pytest-mock>=3.14.1",
]

[tool.uv.pip]
torch-backend = "auto"

[[tool.uv.index]]
name     = "pytorch-cpu"
url      = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name     = "pytorch-nightly"
url      = "https://download.pytorch.org/whl/nightly/cpu"
explicit = true


[[tool.uv.index]]
name     = "pytorch-cu126"
url      = "https://download.pytorch.org/whl/cu126"
explicit = true

[[tool.uv.index]]
name     = "pytorch-cu128"
url      = "https://download.pytorch.org/whl/cu128"
explicit = true

[[tool.uv.index]]
name     = "pytorch-rocm"
url      = "https://download.pytorch.org/whl/rocm6.3"
explicit = true

torch = [
    { index = "pytorch-cpu", extra = "cpu", marker = "sys_platform != 'darwin'" },
    { index = "pytorch-nightly", extra = "mps", marker = "sys_platform == 'darwin'" },
    { index = "pytorch-cu126", extra = "cu126", marker = "python_version < '3.12' and sys_platform == 'Linux' or sys_platform == 'win32'" },
    { index = "pytorch-cu128", extra = "cu128", marker = "sys_platform == 'Linux' or sys_platform == 'win32'" },
    { index = "pytorch-rocm", extra = "rocm", marker = "sys_platform == 'Linux'" },
]
torchvision = [
    { index = "pytorch-cpu", extra = "cpu", marker = "sys_platform != 'darwin'" },
    { index = "pytorch-nightly", extra = "mps", marker = "sys_platform == 'darwin'" },
    { index = "pytorch-cu126", extra = "cu126", marker = "python_version < '3.12' and sys_platform == 'Linux' or sys_platform == 'win32'" },
    { index = "pytorch-cu128", extra = "cu128", marker = "sys_platform == 'Linux' or sys_platform == 'win32'" },
    { index = "pytorch-rocm", extra = "rocm", marker = "sys_platform == 'Linux'" },
]
torchaudio = [
    { index = "pytorch-cpu", extra = "cpu", marker = "sys_platform != 'darwin'" },
    { index = "pytorch-nightly", extra = "mps", marker = "sys_platform == 'darwin'" },
    { index = "pytorch-cu126", extra = "cu126", marker = "python_version < '3.12' and sys_platform == 'Linux' or sys_platform == 'win32'" },
    { index = "pytorch-cu128", extra = "cu128", marker = "sys_platform == 'Linux' or sys_platform == 'win32'" },
    { index = "pytorch-rocm", extra = "rocm", marker = "sys_platform == 'Linux'" },
]

[tool.uv.sources]
diffusers     = { git = "https://github.com/huggingface/diffusers" }
nnll          = { workspace = true }
sentencepiece = { git = "https://github.com/google/sentencepiece.git", subdirectory = "python" }
transformers  = { git = "https://github.com/huggingface/transformers" }

[tool.ruff]
line-length    = 140
include        = ["*.py"]
extend-exclude = ["^tests/.*$", "test.*$"]

[tool.pylint]
max-line-length = 140
ignore-paths    = ["^tests/.*$", "test_.*$"]
disable         = ["C0415"]

[tool.ruff.lint.pycodestyle]
max-line-length               = 140
ignore-overlong-task-comments = true


[tool.typos]
files.extend-exclude = ["^tests/.*$", "test.*$"]
default.extend-words = { "ot" = "ot" }
