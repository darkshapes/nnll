#
[build-system]
requires      = ["setuptools", "setuptools_scm"]
build-backend = "setuptools.build_meta"


[project]
name = "nnll"
description = "Neural Network Link Library : A comprehensive modular toolkit for Diffusion and Large Language Model inference processes."
authors = [
    { name = "darkshapes", email = "91800957+exdysa@users.noreply.github.com" },
]

requires-python = ">= 3.10"
license = { file = "LICENSE" }
readme = "README.md"
urls = { source = "https://github.com/darkshapes/nnll" }
dynamic = ["version"]
keywords = [
    "ML",
    "AI",
    "neural network",
    "library",
    "diffusion",
    "LLM",
    "torch",
]

dependencies = []
[project.optional-dependencies]
nnll-01 = ["rich>=13.9.4"]
nnll-03 = ["aiofiles>=24.1.0", "aiohttp>=3.11.13", "tqdm>=4.67.1"]
nnll-04 = ["gguf>=0.14.0", "llama-cpp-python>=0.3.8"]
nnll-08 = ["numpy>=2.2.3", "torch>=2.6.0"]
nnll-09 = ["torch>=2.6.0", "torchvision>=0.21.0", "transformers>=4.49.0"]
nnll-10 = [
    "dspy>=2.6.13",
    "litellm>=1.63.12",
    "sounddevice>=0.5.1",
    "textual>=2.1.2",
    "textual-plotext>=1.0.1",
    "ollama>=0.4.7",
    "numpy>=2.2.3",
]
nnll-11 = ["dspy>=2.6.13", "pydantic>=2.10.6"]
nnll-14 = ["matplotlib>=3.10.1", "networkx>=3.4.2", "textual>=2.1.2"]
nnll-15 = ["pydantic>=2.10.6"]
nnll-16 = ["torch>=2.6.0"]
nnll-18 = ["torch>=2.6.0"]
nnll-26 = ["torch>=2.6.0"]
nnll-44 = ["huggingface-hub>=0.29.1"]
nnll-45 = ["huggingface-hub>=0.29.1"]
nnll-47 = ["pydantic>=2.10.6", "pydantic-core>=2.27.2"]
nnll-48 = ["pillow>=11.1.0", "toml>=0.10.2"]
nnll-49 = ["pydantic>=2.10.6"]
nnll-56 = ["hidiffusion>=0.1.10", "torch>=2.6.0"]
nnll-57 = ["pillow>=11.1.0"]
nnll-62 = ["diffusers>=0.32.2", "torch>=2.6.0", "torchvision>=0.21.0"]
nnll-63 = [
    "diffusers>=0.32.2",
    "hidiffusion>=0.1.10",
    "torch>=2.6.0",
    "torchvision>=0.21.0",
]
nnll-64 = ["pillow>=11.1.0"]
all = [
    "nnll[nnll_01]",
    "nnll[nnll_03]",
    "nnll[nnll_04]",
    "nnll[nnll_09]",
    "nnll[nnll_10]",
    "nnll[nnll_11]",
    "nnll[nnll_14]",
    "nnll[nnll_15]",
    "nnll[nnll_16]",
    "nnll[nnll_26]",
    "nnll[nnll_18]",
    "nnll[nnll_44]",
    "nnll[nnll_45]",
    "nnll[nnll_47]",
    "nnll[nnll_48]",
    "nnll[nnll_49]",
    "nnll[nnll_56]",
    "nnll[nnll_57]",
    "nnll[nnll_62]",
    "nnll[nnll_63]",
    "nnll[nnll_64]",
]
dev = [
    "nnll[all]",
    "aioresponses>=0.7.8",
    "nnll[dev]",
    "pytest-asyncio>=0.25.3",
    "pytest>=8.3.4",
    "ruff>=0.9.7",
    "textual-dev>=1.7.0",
    "pytest-tornasync>=0.6.0.post2",
    "pytest-trio>=0.8.0",
]


[project.scripts]
nnll-find  = "nnll_31:find_entry"
nnll-parse = "nnll_36:main"

[tool.setuptools.packages.find]
where   = ["."]
include = ["nnll_*"]
exclude = ["tests*"]

[tool.setuptools_scm]
write_to = "_version.py"

[tool.uv]
dev-dependencies = [
    "aioresponses>=0.7.8",
    "nnll[dev]",
    "pytest-asyncio>=0.25.3",
    "pytest>=8.3.4",
    "ruff>=0.9.7",
    "textual-dev>=1.7.0",
    "pytest-tornasync>=0.6.0.post2",
    "pytest-trio>=0.8.0",
]

[tool.ruff]
line-length    = 140
include        = ["*.py"]
extend-exclude = ["^tests/.*$", "test.*$"]

[tool.pylint]
max-line-length = 140
ignore-paths    = ["^tests/.*$", "test_.*$"]

[tool.ruff.format]

[tool.ruff.lint.pycodestyle]
max-line-length               = 140
ignore-overlong-task-comments = true

[tool.typos]
files.extend-exclude = ["^tests/.*$", "test.*$"]
